split(df$Wind[2], df$Wind[1])
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
split(df$Wind[2], df$Wind[1])
split(df$Wind[-2], df$Wind[1])
split(df$Wind[-3], df$Wind[1])
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/R/RShiny_Tree')
install.packages("xlsx")
library("xlsx", lib.loc="~/R/win-library/3.2")
shiny::runApp('H:/RShiny/ShinyTree-template')
shiny::runApp('H:/RShiny/ShinyTree-template')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
df <- read_excel("H:/RShiny/EnAHRgie/Analyseraster_model1/Raster_Analysis_all_felds.xlsx")
shinyServer(function(input, output, session) {
log <- c(paste0(Sys.time(), ": Interact with the tree to see the logs here..."))
nestedList <- rapply(lapply(split(df[-1], df[1]),
function(x) split(x[-1], x[1])),
f = function(x) as.data.frame(as.list(split(x,x))),  how = "replace")
output$tree <- renderTree({ nestedList })
})
output$varLink <- renderUI(
{
tree <- input$tree
address <- read.table("H:/RShiny/EnAHRgie/Analyseraster_model1/address.txt")
names(address) <- "address"
nest <- read.table("H:/RShiny/EnAHRgie/Analyseraster_model1/nest.txt")
names(nest) <- "nest"
mdata <- data.frame(nest, address)
names(mdata) <- c("nest", "address")
l <- unlist(get_selected(tree))
nestaddress <- mdata[mdata$nest == l, 2]
ll <- paste0('Address of ', l)
a(ll, href = paste0('http://', nestaddress))
})
##  möglicher WEg: renderUI ()
output$selTxt <- renderText({
tree <- input$tree
if (is.null(tree)){
"None"
} else{
unlist(get_selected(tree))
}
})
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
nestedList
nestedList <- rapply(lapply(split(df[-1], df[1]),
function(x) split(x[-1], x[1])),
f = function(x) as.data.frame(as.list(split(x,x))),  how = "replace")
nestedList
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/ShinyTree/test')
library(shiny)
shiny::runApp('H:/RShiny/Tree')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
map(
"worldHires"
,
"Canada
"
,
xlim
=c(
-123.5
,
-120.5
),
ylim
=c(
49
,
50.8
),
col
=
"gray90"
,
fill
=
TRUE
)
map(
"worldHires"
,
"usa
"
,
xlim
=c(
-140
,
-110
),
ylim
=c(
48
,
64
),
col
=
"gray95"
,
fill
=
TRUE
,
add
=
TRUE
)
#plot species range
plot(
pcontorta
,
add
=
TRUE
,
xlim
=c(
-140
,
-110
),
ylim
=c(
48
,
64
),
col
=
alpha(
"darkgreen
"
,
0.6
),
border
=
FALSE
)
#map cities
map.cities(
country
=
"Canada"
,
label
=
TRUE
,
cex
=
1
,
xlim
=c(
-140
,
-110
),
ylim
=c(
48
,
64
),
pch
=
20
)
#plot field data
points(
samps
$
Long
,
samps
$
Lat
,
pch
=
4
,
col
=
"red"
,
cex
=
0.8
)
#put a scale on the map
map.scale(
-123.3
,
50.7
,
ratio
=
FALSE
,
relwidth
=
0.2
,
cex
=
1.2
)
box()
map(
database
=
"world"
,
xlim
=c
(
-170
,
-10
),
ylim
=c
(
45
,
83
),
resolution
=
0
,
col
=
"grey80”
,
fill
=
TRUE
)
)
)
)
install.package('stringr')
if (packageVersion('stringr') > '1.0.0'){
devtools::install_github('muschellij2/slidify')
} else {
cat('You need stringr 1.0.0'
}
install.packages("stringr")
if (packageVersion('stringr') > '1.0.0'){
devtools::install_github('muschellij2/slidify')
} else {
cat('You need stringr 1.0.0'
}
setwd("H:/CO-EU/Interactive/")
setwd("H:/R/CO-EU/Interactive/")
library("slidify", lib.loc="~/R/win-library/3.2")
library("slidifyLibraries", lib.loc="~/R/win-library/3.2")
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
library("shiny", lib.loc="~/R/win-library/3.2")
slidify('index.Rmd')
library("shinyapps", lib.loc="~/R/win-library/3.2")
library("shinydashboard", lib.loc="~/R/win-library/3.2")
library("shinyTree", lib.loc="~/R/win-library/3.2")
library("shinyAce", lib.loc="~/R/win-library/3.2")
slidify('index.Rmd')
library("knitr", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
install.packages('scale')
install.packages('Scale')
slidify('index.Rmd')
browseURL('index.html')
setwd("H:/RShiny/EnAHRgie/ENA_Slidify/")
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
setwd("H:/R/CO-EU/Interactive/")
slidify('index.Rmd')
slidify('index.Rmd')
setwd("H:/R/CO-EU/Interactive/")
slidify('index.Rmd')
browseURL('index.html')
setwd("H:/RShiny/EnAHRgie/ENA_Slidify/")
slidify('index.Rmd')
browseURL('index.html')
setwd("H:/RShiny/EnAHRgie/ENA_Slidify/")
slidify('index.Rmd')
browseURL('index.html')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
mtcars
install.packages('ascii')
setwd("H:/RShiny/EnAHRgie/ENA_Slidify/")
source('newRest.R')
ReST('ascii-example.Rnw')
ReST('ascii-example.Rnw')
ReST('ascii-example.Rnw')
rst2html ascii-example.rst ascii-example.html
print(xtable(tb), type = "html")
library(readxl)
read_excel_allsheets <- function(filename) {
sheets <- readxl::excel_sheets(filename)
x <-    lapply(sheets, function(X) readxl::read_excel(filename, sheet = X))
names(x) <- sheets
x
}
df <- read_excel_allsheets("Raster_Analysis_full2.xlsx")
print(xtable(df), type = "html")
print(xtable(df$Wind), type = "html")
save(xtable(df$Wind), type = "html")
HTML(df$Wind)
A<-HTML(df$Wind)
A
cat(df$Wind$html, file="Windtable.html")
cat(df$Wind, file="Windtable.html")
cat(df$Wind$html$table, file="Windtable.html")
A$save('B.html',cdn=TRUE)
htmlTable(A)
HTML(A, file=outpath, append=FALSE)
A
str(A)
str(df)
HTML(df, file=outpath, append=FALSE)
library("xtable")
sample_table <- df[1:3,1:3]
dim(df)
library("xtable")
sample_table <- df$Wind
print(xtable(sample_table), type="html", file="example.html")
df$sheet1
df("sheet1")
df(sheet1)
df[sheet1]
sheets
x
Mydata <- read_excel(Analyseraster_These.xlsx , sheet = 3)
library(readxl)
library(xtable)
setwd("H:/RShiny/EnAHRgie/ENA_Slidify")
# to read all worksheets of an Excel file into an R list with data.frame elements
read_excel_allsheets <- function(filename) {
sheets <- readxl::excel_sheets(filename)
x <-    lapply(sheets, function(X) readxl::read_excel(filename, sheet = X))
names(x) <- sheets
x
}
Mydata <- read_excel(Analyseraster_These.xlsx , sheet = 3)
library(readxl)
library(xtable)
setwd("H:/RShiny/EnAHRgie/ENA_Slidify/")
# to read all worksheets of an Excel file into an R list with data.frame elements
read_excel_allsheets <- function(filename) {
sheets <- readxl::excel_sheets(filename)
x <-    lapply(sheets, function(X) readxl::read_excel(filename, sheet = X))
names(x) <- sheets
x
}
Mydata <- read_excel_allsheets("Analyseraster_These.xlsx")
readxl::read_excel(Mydata, sheet = 3)
sheets <- readxl::excel_sheets(filename)
sheets <- readxl::excel_sheets(Mydata)
print(xtable(Mydata), type="html", file="example.html")
Mydata <- read_excel_allsheets("Analyseraster_These.xlsx")
sample_table <-Mydata$Wind_KHK_handl.
print(xtable(sample_table), type="html", file="example.html")
str(sample_table )
sample_table <-Mydata$Wind_KHK_handl.[:,2:4]
print(xtable(sample_table), type="html", file="example.html")
sample_table <-Mydata$Wind_KHK_handl.[:,4]
print(xtable(sample_table), type="html", file="example.html")
sample_table <-Mydata$Wind_KHK_handl.
print(xtable(sample_table[:,4]), type="html", file="example.html")
sample_table1 <-Mydata$Wind_KHK_handl.
sample_table2 <- sample_table1[:,4]
print(xtable(sample_table2), type="html", file="example.html")
sample_table1 <-Mydata$Wind_KHK_handl.
sample_table2 <- sample_table1[:,4]
sample_table2 <- sample_table1[,4]
print(xtable(sample_table2), type="html", file="example.html")
Mydata <- read_excel_allsheets("Analyseraster_These.xlsx")
sample_table <-Mydata$Wind_KHK_handl.[,4]
print(xtable(sample_table), type="html", file="example.html")
sample_table <-Mydata$Wind_KHK_handl.
print(xtable(sample_table), type="html", file="example.html")
print(xtable(Mydata), type="html", file="Ansiedlung_Windenergie.html")
Mydata <- read_excel_allsheets("Ansiedlung_Windenergie.xlsx")
print(xtable(Mydata), type="html", file="Ansiedlung_Windenergie.html")
sample_table <- Mydata
#print(xtable(sample_table), type="html", file="example.html")
print(xtable(sample_table), type="html", file="Ansiedlung_Windenergie.html")
Mydata <- read_excel_allsheets("Ansiedlung_Windenergie.xlsx")
Mydata
Mydata <- read_excel_allsheets("Ansiedlung_Windenergie.xlsx")
#sample_table <-Mydata$Wind_KHK_handl.
#print(xtable(sample_table), type="html", file="example.html")
print(xtable(Mydata), type="html", file="AnsiedlungWindenergie.html")
#print(xtable(Mydata), type="html", file="AnsiedlungWindenergie.html")
rm(list=ls())
print(xtable(sample_table), type="html", file="AnsiedlungWindenergie.html")
#print(xtable(Mydata), type="html", file="AnsiedlungWindenergie.html")
Mydata <- read_excel_allsheets("These.xlsx")
Mydata <- read_excel("These.xlsx")
sample_table <-Mydata$Wind
print(xtable(sample_table), type="html", file="example.html")
Mydata
sample_table <-Mydata
print(xtable(sample_table), type="html", file="example.html")
# sample_table <-Mydata$Wind
# print(xtable(Mydata), type="html", file="AnsiedlungWindenergie.html")
Thesedata <- read_excel("These.xlsx")
print(xtable(Thesedata), type="html", file="AnsiedlungWindenergie.html")
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
