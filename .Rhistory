,
"Netze" = rapply(lapply(split(df$Netze[-1], df$Netze[1]),
function(x) split(x[-1], x[1])),
f = function(x) as.data.frame(as.list(split(x,x))),  how = "replace")
,
"Effizienz" = rapply(lapply(split(df$Effizienz[-1], df$Effizienz[1]),
function(x) split(x[-1], x[1])),
f = function(x) as.data.frame(as.list(split(x,x))),  how = "replace")
,
"Energieausgleich" = rapply(lapply(split(df$Energieausgleich[-1], df$Energieausgleich[1]),
function(x) split(x[-1], x[1])),
f = function(x) as.data.frame(as.list(split(x,x))),  how = "replace")
)
}
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
dim(df)
str(df)
dim(as.matrix(df))
dim(as.matrix(df$Wind))
dim((df$Wind))
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/ShinyTree-template')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
test <- 4
if( test == 4){print("yes") else (print("no"))}
x <- c(6:-4)
sqrt(x)  #- gives warning
sqrt(ifelse(x >= 0, x, NA))
x <- c(6:-4)
sqrt(x)  #- gives warning
sqrt(ifelse(x >= 0, x^3, NA))
x <- c(6:-4)
sqrt(x)  #- gives warning
sqrt(ifelse(x >= 0, x^3, 3))
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
dim(df$Wind)
dim(df$Wind)[2]
lapply(split(df$Wind[-1], df$Wind[1]),
function(x) split(x[-1], x[1]))
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
df$Wind)[2]
dim(df$Wind)[2]
df <- read_excel_allsheets("H:/EnAHRgie/data/Raster_Analysis_full2.xlsx")
dim(df$Wind)[2]
dim(df$Solar)[2]
if(dim(df$Wind)[2] > 2) {
"Wind" = rapply(lapply(split(df$Wind[-1], df$Wind[1]),
function(x) split(x[-1], x[1])),
f = function(x) as.data.frame(as.list(split(x,x))),  how = "replace")
}else {
"Wind" =lapply(split(df$Wind[-1], df$Wind[1]),
function(x) split(x[-1], x[1]))
}
wind
Wind
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
if(dim(df$Solar)[2] > 2) {
"Solar" = rapply(lapply(split(df$Solar[-1], df$Solar[1]),
function(x) split(x[-1], x[1])),
f = function(x) as.data.frame(as.list(split(x,x))),  how = "replace")
}else {
"Solar" =lapply(split(df$Solar[-1], df$Solar[1]),
function(x) split(x,x))
}
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
rm(list=ls())
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/ShinyTree-template')
shiny::runApp('H:/RShiny/ShinyTree-template')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
}
split(df$Wind[-1], df$Wind[1])
df <- read_excel_allsheets("H:/EnAHRgie/data/Raster_Analysis_full2.xlsx")
read_excel_allsheets <- function(filename) {
sheets <- readxl::excel_sheets(filename)
x <-    lapply(sheets, function(X) readxl::read_excel(filename, sheet = X))
names(x) <- sheets
x
}
df <- read_excel_allsheets("H:/EnAHRgie/data/Raster_Analysis_full2.xlsx")
split(df$Wind[-1], df$Wind[1])
split(df$Wind[-1], df$Wind[1],na.rm=TRUE)
split(df$Wind[-1], df$Wind[1],na.rm=T)
split(df$Wind[-1], df$Wind[1],drop = TRUE)
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
split(df$Wind[-1], df$Wind[1]
)
split(df$Wind[2], df$Wind[1])
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
split(df$Wind[2], df$Wind[1])
split(df$Wind[-2], df$Wind[1])
split(df$Wind[-3], df$Wind[1])
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/R/RShiny_Tree')
install.packages("xlsx")
library("xlsx", lib.loc="~/R/win-library/3.2")
shiny::runApp('H:/RShiny/ShinyTree-template')
shiny::runApp('H:/RShiny/ShinyTree-template')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
df <- read_excel("H:/RShiny/EnAHRgie/Analyseraster_model1/Raster_Analysis_all_felds.xlsx")
shinyServer(function(input, output, session) {
log <- c(paste0(Sys.time(), ": Interact with the tree to see the logs here..."))
nestedList <- rapply(lapply(split(df[-1], df[1]),
function(x) split(x[-1], x[1])),
f = function(x) as.data.frame(as.list(split(x,x))),  how = "replace")
output$tree <- renderTree({ nestedList })
})
output$varLink <- renderUI(
{
tree <- input$tree
address <- read.table("H:/RShiny/EnAHRgie/Analyseraster_model1/address.txt")
names(address) <- "address"
nest <- read.table("H:/RShiny/EnAHRgie/Analyseraster_model1/nest.txt")
names(nest) <- "nest"
mdata <- data.frame(nest, address)
names(mdata) <- c("nest", "address")
l <- unlist(get_selected(tree))
nestaddress <- mdata[mdata$nest == l, 2]
ll <- paste0('Address of ', l)
a(ll, href = paste0('http://', nestaddress))
})
##  mÃ¶glicher WEg: renderUI ()
output$selTxt <- renderText({
tree <- input$tree
if (is.null(tree)){
"None"
} else{
unlist(get_selected(tree))
}
})
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
nestedList
nestedList <- rapply(lapply(split(df[-1], df[1]),
function(x) split(x[-1], x[1])),
f = function(x) as.data.frame(as.list(split(x,x))),  how = "replace")
nestedList
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/ShinyTree/test')
library(shiny)
shiny::runApp('H:/RShiny/Tree')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
map(
"worldHires"
,
"Canada
"
,
xlim
=c(
-123.5
,
-120.5
),
ylim
=c(
49
,
50.8
),
col
=
"gray90"
,
fill
=
TRUE
)
map(
"worldHires"
,
"usa
"
,
xlim
=c(
-140
,
-110
),
ylim
=c(
48
,
64
),
col
=
"gray95"
,
fill
=
TRUE
,
add
=
TRUE
)
#plot species range
plot(
pcontorta
,
add
=
TRUE
,
xlim
=c(
-140
,
-110
),
ylim
=c(
48
,
64
),
col
=
alpha(
"darkgreen
"
,
0.6
),
border
=
FALSE
)
#map cities
map.cities(
country
=
"Canada"
,
label
=
TRUE
,
cex
=
1
,
xlim
=c(
-140
,
-110
),
ylim
=c(
48
,
64
),
pch
=
20
)
#plot field data
points(
samps
$
Long
,
samps
$
Lat
,
pch
=
4
,
col
=
"red"
,
cex
=
0.8
)
#put a scale on the map
map.scale(
-123.3
,
50.7
,
ratio
=
FALSE
,
relwidth
=
0.2
,
cex
=
1.2
)
box()
map(
database
=
"world"
,
xlim
=c
(
-170
,
-10
),
ylim
=c
(
45
,
83
),
resolution
=
0
,
col
=
"grey80â
,
fill
=
TRUE
)
)
)
)
install.package('stringr')
if (packageVersion('stringr') > '1.0.0'){
devtools::install_github('muschellij2/slidify')
} else {
cat('You need stringr 1.0.0'
}
install.packages("stringr")
if (packageVersion('stringr') > '1.0.0'){
devtools::install_github('muschellij2/slidify')
} else {
cat('You need stringr 1.0.0'
}
setwd("H:/RShiny/EnAHRgie/ENA_Slidify")
slidify('index.Rmd')
library("slidify", lib.loc="~/R/win-library/3.2")
library("slidifyLibraries", lib.loc="~/R/win-library/3.2")
slidify('index.Rmd')
warnings()
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
haireye
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
slidify('index.Rmd')
browseURL('index.html')
runDeck()
runDeck()
M1
setwd("H:/RShiny/EnAHRgie/ENA_Slidify")
slidify('index.Rmd')
M1
Fruits
M1 <- gvisMotionChart(Fruits, idvar = 'Fruit', timevar = 'Year')
M1
print(M1,tag = 'chart')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
runDeck()
runDeck()
slidify('index.Rmd')
browseURL('index.html')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model1')
shiny::runApp('H:/RShiny/EnAHRgie/Analyseraster_model2')
